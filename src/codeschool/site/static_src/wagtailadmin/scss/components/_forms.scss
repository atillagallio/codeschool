.multiple {
    padding: 0;
    max-width: 1024px - 50px;
    overflow: hidden;

    > li {
        @include row();
        border-radius: 2px;
        position: relative;
        overflow: hidden;
        background-color: $color-white;
        padding: 1em 10em 1em 1.5em; // 10em padding leaves room for controls
        margin-bottom: 1em;
        border: 1px solid lighten($color-grey-4, 3%); // really trying to avoid creating more greys, but this one is better than grey 4 or 5
    }

    &.moving {
        position: relative;
    }

    li.moving {
        position: absolute;
        width: 100%;
    }

    fieldset {
        padding-top: 0;
        padding-bottom: 0;
    }

    // Object controls
    .controls {
        position: absolute;
        z-index: 1;
        right: 1em;
        top: 1em;
        color: $color-white;

        li {
            float: left;
            margin-right: 1px;

            &:last-child {
                margin-right: 0;
            }
        }

        .disabled {
            display: none;
            visibility: hidden;
        }
    }

}

// wrapper around add button for mutliple objects
.add {
    font-weight: 700;
    cursor: pointer;
    margin-top: 0;
    margin-bottom: 0;
    padding-top: 1em;
    padding-bottom: 2em;
    clear: both;
}

// Other text
.help,
.error-message {
    font-size: 0.85em;
    font-weight: normal;
    margin: 0.5em 0 0;
}

.error-message {
    color: $color-red;
}

.help {
    color: $color-grey-2;
}

fieldset:hover > .help,
.field.focused + .help,
.field:focus + .help,
.field:hover + .help,
li.focused > .help {
    opacity: 1;
}

.required .field > label:after {
    content: '*';
    color: $color-red;
    font-weight: bold;
    display: inline-block;
    margin-left: 0.5em;
    line-height: 1em;
    font-size: 13px;
}

.error input,
.error textarea,
.error select,
.error .tagit {
    border-color: $color-red;
    background-color: $color-input-error-bg;
}

// Layouts for particular kinds of of fields

// permanently show checkbox/radio help as they have no focus state
.boolean_field .help,
.radio .help {
    opacity: 1;
}

// This is expected to go on the parent of the input/select/textarea
// so in most cases .input

.iconfield, // generic
.date_field,
.time_field,
.date_time_field,
.url_field {
    .input {
        position: relative;

        &:before,
        &:after {
            font-family: wagtail;
            position: absolute;
            top: 0.5em;
            line-height: 100%;
            font-size: 2em;
            color: $color-grey-3;
        }

        &:before {
            left: 0.3em;
        }

        &:after {
            right: 0.5em;
        }
    }

    input:not([type=radio]),
    input:not([type=checkbox]),
    input:not([type=submit]),
    input:not([type=button]) {
        padding-left: 2.5em;
    }

    // smaller fields required slight repositioning of icons
    &.field-small {
        .input {
            &:before,
            &:after {
                font-size: 1.3rem; // REMs are necessary here because IE doesn't treat generated content correctly
                top: 0.3em;
            }

            &:before {
                left: 0.5em;
            }

            &:after {
                right: 0.5em;
            }
        }
    }

    // special case for search spinners
    &.icon-spinner:after {
        color: $color-element-highlight;
        opacity: 0.8;
        text-align: center;
        top: 0.3em;
    }
}

.date_field,
.date_time_field {
    .input:before {
        @extend .icon-date:before;
    }
}

.time_field {
    .input:before {
        @extend .icon-time:before;
    }
}

.url_field {
    .input:before {
        @extend .icon-link:before;
    }
}


// This is specifically for model that are a generated set of checkboxes/radios
.model_multiple_choice_field .input li,
.choice_field .input li {
    label {
        display: block;
        width: auto;
        float: none;
        padding-top: 0; // Negates padding added to label for the group of fields as a whole
    }
}

.fields > li,
.field-col {
    @include clearfix();
    padding-top: 0.5em;
    padding-bottom: 1.2em;
}

.field-row {
    @include clearfix();

    // negative margin the bottom so it doesn't add too much space
    margin-bottom: -1.2em;
}

.input {
    clear: both;
}

// field sizing and alignment

.field-small {
    input,
    textarea,
    select,
    .richtext,
    .tagit {
        border-radius: 3px;
        padding: 0.4em 1em;
    }
}

.field {
    &.col1,
    &.col2,
    &.col3,
    &.col4,
    &.col5,
    &.col6,
    &.col7,
    &.col8,
    &.col9,
    &.col10,
    &.col11,
    &.col12 { clear: both;}
}

li.inline .field {
    &.col1,
    &.col2,
    &.col3,
    &.col4,
    &.col5,
    &.col6,
    &.col7,
    &.col8,
    &.col9,
    &.col10,
    &.col11,
    &.col12 { clear: none;}
}

// solve gutter issues of inline fields
ul.inline li:first-child,
li.inline:first-child {
    margin-left: -$grid-gutter-width / 2;
}


// TODO this chooser style has been made more generic based on two identical methods
// for choosing pages and images that were previously included in their own less files
// in each app directory (and since deleted). It would be best if an admin 'theme' provided
// all the design for a UI in a single place, but should that be a series of overrides to
// the css provided from an app? If so, perhaps those two previous less files should be
// re-instated and then overriden here? hmm.

.chooser {
    // We show the 'chosen' state...
    @include clearfix();

    input[type=text] {
        float: left;
        width: 50%;
        margin-right: 1em;
    }

    .chosen {
        display: block;
    }

    .unchosen,
    .chosen {
        position: relative;

        &:before {
            vertical-align: middle;
            font-family: wagtail;
            content: '';
            // position: relative
            display: inline-block;
            // float: left;
            color: $color-grey-3;
            line-height: 1em;
            font-size: 2.5em;
            margin-right: 0.3em;
        }
    }

    .unchosen {
        display: none;
    }

    .actions {
        @include clearfix;
        overflow: hidden;

        li {
            float: left;
            margin: 0.3em;
        }
    }

    // ...unless the .page-chooser has the 'blank' class set
    &.blank {
        .chosen { display: none; }
        .unchosen { display: block; }
    }
}

// standard way of doing a chooser where the chosen object's title is overlayed
.page-chooser,
.snippet-chooser,
.document-chooser {
    .chosen {
        .title {
            color: $color-grey-1;
            // display: block;
            padding-left: 1em;
            display: inline-block;
        }

        .actions {
            clear: both;
            padding-top: 0.6em;
        }
    }
}

.page-chooser {
    .unchosen,
    .chosen {
        &:before {
            content: 'b';
        }
    }
}

.snippet-chooser {
    .unchosen,
    .chosen {
        &:before {
            content: 'D';
        }
    }
}

.document-chooser {
    .unchosen,
    .chosen {
        &:before {
            content: 'r';
        }
    }
}

.image-chooser {
    .unchosen,
    .chosen {
        &:before {
            content: 'o';
        }
    }

    .chosen {
        padding-left: $thumbnail-width;

        &:before {
            content: '';
        }

        .preview-image {
            float: left;
            margin-left: -($thumbnail-width);
            margin-right: 1em;
            max-width: $thumbnail-width;

            // Resize standard Wagtail thumbnail size (165x165) to 130 for space-saving purposes.
            // We could request a 130x130 rendition, but that's just unnecessary and burdens installations
            // where images are store off-site with higher rendering times.
            img {
                max-width: $thumbnail-width;
                max-height: $thumbnail-width;
                height: auto;
                width: auto;
            }
        }
    }
}

// taggit tagging
.tagit {
    padding: 0.6em 1.2em;

    .tagit-choice {
        border: 0;
    }
}

// Additional specificity (.admin_tag_widget ) required to override tagit stylesheets,
// which get added after the core CSS, and otherweise trump our styles.
.admin_tag_widget ul.tagit input[type='text'] {
    padding: 0.2em 0.5em;
}

// Additional specificity (.admin_tag_widget ) required to override tagit stylesheets,
// which get added after the core CSS, and otherweise trump our styles.
.admin_tag_widget ul.tagit li.tagit-choice-editable {
    padding: 0 23px 0 0;
}

.ui-front { // provided by jqueryui but not high enough an index
    z-index: 1000;
}

.tagit-close {
    .ui-icon-close {
        margin-left: 1em;
        text-indent: 0;
        background: none;
    }

    .ui-icon-close:before {
        font-family: wagtail;
        display: block;
        color: $color-grey-3;
        content: 'g';
    }

    .ui-icon-close:hover:before {
        color: $color-red;
    }
}

// search-bars
.search-bar {
    .required .field > label:after {
        display: none;
    }
}

// file drop zones
.drop-zone {
    border-radius: 5px;
    border: 2px dashed $color-grey-4;
    padding: $mobile-nice-padding;
    background-color: $color-grey-5;
    margin-bottom: 1em;
    text-align: center;

    .drop-zone-help {
        border: 0;
    }

    &.hovered {
        border-color: $color-element-highlight;
        background-color: $color-input-focus;
    }
}

// Transitions
fieldset,
input,
textarea,
select {
    @include transition(background-color 0.2s ease);
}

input[type=submit],
input[type=reset],
input[type=button],
.button,
button {
    // @include transition(background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease);
}

.help {
    @include transition(opacity 0.2s ease);
}

@media screen and (min-width: $breakpoint-mobile) {
    label {
        @include column(2);
        padding-top: 1.2em;
        padding-left: 0;

        .radio_select &,
        .model_multiple_choice_field &,
        .boolean_field &,
        .model_choice_field &,
        .image_field & {
            padding-top: 0;
        }

        // Horrid specificity war
        .model_choice_field.select & {
            padding-top: 1.2em;
        }
    }

    .label-above {
        .field > label {
            display: block;
            padding: 0 0 0.8em;
            float: none;
            width: auto;
        }
    }

    .help {
        opacity: 1;
    }

    .fields {
        max-width: 800px;
    }

    .field {
        @include row();
    }

    .field-content {
        @include column(10, 0);
    }

    .field-col {
        float: left;
        padding-left: 0;

        // anything less than 4 columns or greater than 6 is impractical
        &.col4 {
            label {
                @include column(2, 0, 4);
            }

            .field-content {
                @include column(2, $padding, 4);
                padding-left: 0;
            }
        }

        &.col6 {
            label {
                @include column(2, 0, 6);
            }

            .field-content {
                @include column(4, $padding, 6);
                padding-left: 0;
            }
        }
    }
}
